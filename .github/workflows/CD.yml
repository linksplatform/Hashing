name: CD

on:
  push:
    branches: master
  pull_request:
    branches: master

env:
  NUGETTOKEN: ${{ secrets.NUGET_TOKEN }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  SCRIPTS_BASE_URL: https://raw.githubusercontent.com/linksplatform/Scripts/master/MultiProjectRepository

jobs:
  testCpp:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
        with:
          submodules: true

      - name: Install Clang 11
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: "11.0"

      - name: Conan install
        run: pip install conan

      - name: Conan setup
        run: |
          conan profile new linksplatform --detect
          conan profile update settings.compiler=clang linksplatform
          conan profile update settings.compiler.version=11 linksplatform
          conan profile update settings.compiler.libcxx=libstdc++11 linksplatform
          conan profile update env.CC=clang linksplatform
          conan profile update env.CXX=clang++ linksplatform
          conan profile show linksplatform
      - name: Conan install packages
        run: |
          git clone https://github.com/linksplatform/conan-center-index
          cd conan-center-index && git checkout only-development && cd recipes
          conan create platform.interfaces/all platform.interfaces/0.1.3@ -pr=linksplatform
          conan create platform.exceptions/all platform.exceptions/0.1.1@ -pr=linksplatform
          conan create platform.delegates/all platform.delegates/0.1.3@ -pr=linksplatform
          conan create platform.hashing/all platform.hashing/0.1.0@ -pr=linksplatform
          conan create platform.equality/all platform.equality/0.0.1@ -pr=linksplatform
      - name: Test C++ and scan-build
        run: |
          cmake_flags="-DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ -DLINKS_PLATFORM_TESTS=TRUE"
          export REPOSITORY_NAME=$(basename ${{ github.repository }})
          cd cpp && mkdir $REPOSITORY_NAME && cd $REPOSITORY_NAME
          conan install .. -if=. -pr=linksplatform --build=missing
          cmake .. $cmake_flags
          make -j 2 && scan-build make -j 2
          binaries=bin/*
          for binary in $binaries
          do
             ./$binary
          done

  testCppOnWindows:
    runs-on: windows-latest
    steps:
      - uses: ilammy/msvc-dev-cmd@v1
      - uses: actions/checkout@v1
        with:
          submodules: true

      - name: Conan install
        run: pip install conan

      - name: Conan setup
        run: |
          conan profile new linksplatform --detect
          conan profile update settings.compiler=msvc linksplatform
          conan profile update settings.compiler.version=19 linksplatform
          conan profile update settings.compiler.libcxx=libstdc++11 linksplatform
          conan profile show linksplatform
      - name: Conan install packages
        run: |
          git clone https://github.com/linksplatform/conan-center-index
          cd conan-center-index && git checkout only-development && cd recipes
          conan create platform.interfaces/all platform.interfaces/0.1.3@ -pr=linksplatform
          conan create platform.exceptions/all platform.exceptions/0.1.1@ -pr=linksplatform
          conan create platform.delegates/all platform.delegates/0.1.3@ -pr=linksplatform
          conan create platform.hashing/all platform.hashing/0.1.0@ -pr=linksplatform
          conan create platform.equality/all platform.equality/0.0.1@ -pr=linksplatform
      - name: Test C++
        run: |
          cmake_flags="-DCMAKE_BUILD_TYPE=Release -DLINKS_PLATFORM_TESTS=TRUE"
          export REPOSITORY_NAME=$(basename ${{ github.repository }})
          cd cpp && mkdir $REPOSITORY_NAME && cd $REPOSITORY_NAME
          conan install .. -if=. -pr=linksplatform --build=missing
          cmake .. -G "NMake Makefiles" $cmake_flags
          make -j 2
          binaries=bin/*
          for binary in $binaries
          do
             ./$binary
          done


  deploy:
    needs: [testCpp]
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
        with:
          submodules: 'true'
      - name: Read Cpp package information
        if: github.event_name == 'push'
        run: |
          export REPOSITORY_NAME=$(basename ${{ github.repository }})
          wget "$SCRIPTS_BASE_URL/read_cpp_package_info.sh"
          bash ./read_cpp_package_info.sh
      - name: Publish Cpp NuGet package
        if: github.event_name == 'push'
        run: |
          export REPOSITORY_NAME=$(basename ${{ github.repository }})
          wget "$SCRIPTS_BASE_URL/push-cpp-nuget.sh"
          bash ./push-cpp-nuget.sh
      - name: Publish release
        if: github.event_name == 'push'
        run: |
          export REPOSITORY_NAME=$(basename ${{ github.repository }})
          wget "$SCRIPTS_BASE_URL/publish-release.sh"
          bash ./publish-release.sh
