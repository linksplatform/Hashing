<?xml version="1.0" encoding="utf-8"?>
<package xmlns="http://schemas.microsoft.com/packaging/2011/08/nuspec.xsd">
  <metadata>
    <id>Platform.Hashing.TemplateLibrary</id>
    <title>LinksPlatform's Platform.Hashing Template Library</title>
    <summary>LinksPlatform's Platform.Hashing is a Template Library what contains abstract class templates.</summary>
    <description>LinksPlatform's Platform.Hashing is a Template Library what contains set of C++ abstract class templates. Use Platform.Hashing.h file to include the library.</description>
    <releaseNotes>Hash overload with multiple arguments now uses rvalue reference.
Added support for passing complex types into Hash function.
Fixed bug with incorrect static_cast.</releaseNotes>
    <version>0.0.3</version>
    <authors>Konstantin Diachenko</authors>
    <owners>Konstantin Diachenko</owners>
    <copyright>Konstantin Diachenko</copyright>
    <projectUrl>https://linksplatform.github.io/Hashing</projectUrl>
    <repository type="git" url="https://github.com/linksplatform/Hashing" />
    <icon>images/icon.png</icon>
    <tags>C++ Native Hashing</tags>
    <license type="expression">LGPL-3.0-only</license>
    <requireLicenseAcceptance>true</requireLicenseAcceptance>
    <dependencies>
      <group targetFramework="native">
        <dependency id="Crc32C" version="1.2.1" />
      </group>
    </dependencies>
  </metadata>
  <files>
    <file src="icon.png" target="images/icon.png" />
    <file src="Platform.Hashing.TemplateLibrary.targets" target="build\native\Platform.Hashing.TemplateLibrary.targets" />
    <file src="Platform.Hashing.h" target="lib\native\include\Platform.Hashing.h" />
    <file src="Platform.Hashing.Combine.h" target="lib\native\include\Platform.Hashing.Combine.h" />
    <file src="Platform.Hashing.Expand.h" target="lib\native\include\Platform.Hashing.Expand.h" />
    <file src="Platform.Hashing.Hash.h" target="lib\native\include\Platform.Hashing.Hash.h" />
    <file src="Platform.Hashing.Tuple.h" target="lib\native\include\Platform.Hashing.Tuple.h" />
  </files>
</package>